#!/bin/zsh

mkcd()
{
    mkdir -p -- "$1" && cd -P -- "$1"
}

# cd does auto 'ls' with top five elements
cd()
{
    builtin cd "$@" && ls -U |head -5
}

# usage: hex2rgb "#FFAABB"
hex2rgb() {
    hex=$(echo "${1^^}" | sed 's/#//g')

    a=$(echo $hex | cut -c-2)
    b=$(echo $hex | cut -c3-4)
    c=$(echo $hex | cut -c5-6)

    r=$(echo "ibase=16; $a" | bc)
    g=$(echo "ibase=16; $b" | bc)
    b=$(echo "ibase=16; $c" | bc)

    echo "($r, $g, $b)"
}

# copy last recently updated file
cplru(){
    cp -p "`ls -dtr1 $1/* | tail -1`" $2
}

# mv last recently updated file
mvlru(){
    mv "`ls -dtr1 $1/* | tail -1`" $2
}



# convert an input .flac file to a 320 kbps .mp3 file
flac2mp3() {
    ffmpeg -i "$1" -ab 320k -map_metadata 0 -id3v2_version 3 "${1%.flac}".mp3
}

wav2mp3() {
    ffmpeg -i "$1" -ac 2 -ar 44100 "${1%.wav}".mp3
}

stripspace(){
    for f in *\ *; do mv "$f" "${f// /_}"; done
}

mov2gif(){
    ffmpeg -i "$1" -pix_fmt rgb8 -r 8 -vf scale=-1:640 "${1%.mov}".gif
}

ffmcomp(){
    ffmpeg -i "$1" -b 800k "${1%.*}"_compressed.mp4
}

png2jpg(){
    convert -strip -interlace Plane -gaussian-blur 0.05 -quality 85% "$1" "${1%.*}"_compressed.jpg
}

dequarantine(){
    sudo xattr -r -d com.apple.quarantine $@
}

idea () {
    open -na "IntelliJ IDEA.app" --args "$@"
}

pycharm () {
    open -na "PyCharm CE.app" --args "$@"   
}

notify () {
    # macOS specific way of getting a notify functionality
    /usr/bin/osascript -e "display notification \"$*\" with title \"Notification\" sound name \"Hero\""
}

coauthors()
{
    if [[ $# -eq 0 ]] ; then
        echo -e "usage: coauthors search_terms..."
        return
    fi
    local all_authors=$(git log | sed -nE "s/.*uthor.*: (.*)/\1/p" | sort | uniq -c | sort -nr)

    local result=""
    for search_term in "$@"; do
        if author=$(echo "$all_authors"| grep $search_term | head -n1 | sed -nE "s/.*[[:digit:]]+ (.*)/\1/p"); then
            if [ -z "$result" ]; then
                result=$'Co-authored-by: '$author
            else
                result=$result$'\n'$'Co-authored-by: '$author
            fi
        fi
    done

    echo "$result" | pbcopy
    echo "$result"
}

js() {
    osascript -l 'JavaScript' -e "$@"
}
